// <auto-generated />
using System;
using ChatServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatServer.Migrations
{
    [DbContext(typeof(ChatAPPContext))]
    partial class ChatAPPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChatServer.Models.Entities.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Channel", (string)null);
                });

            modelBuilder.Entity("ChatServer.Models.Entities.ChannelMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int")
                        .HasColumnName("channel_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("UserId");

                    b.ToTable("ChannelMembership", (string)null);
                });

            modelBuilder.Entity("ChatServer.Models.Entities.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Filename")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("filename");

                    b.Property<string>("Path")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("path");

                    b.Property<long?>("Size")
                        .HasColumnType("bigint")
                        .HasColumnName("size");

                    b.Property<DateTime?>("UploadedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("uploaded_at");

                    b.HasKey("Id");

                    b.ToTable("FileUploads");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int")
                        .HasColumnName("channel_id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("ReceiverStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("receiver_status");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime")
                        .HasColumnName("send_time");

                    b.Property<string>("SenderStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sender_status");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("UserId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("ChatServer.Models.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("is_read");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("ChatServer.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FileId")
                        .HasColumnType("int")
                        .HasColumnName("file_id");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.ChannelMembership", b =>
                {
                    b.HasOne("ChatServer.Models.Entities.Channel", "Channel")
                        .WithMany("ChannelMemberships")
                        .HasForeignKey("ChannelId")
                        .HasConstraintName("FK__ChannelMe__chann__412EB0B6");

                    b.HasOne("ChatServer.Models.Entities.User", "User")
                        .WithMany("ChannelMemberships")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ChannelMe__user___403A8C7D");

                    b.Navigation("Channel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.Message", b =>
                {
                    b.HasOne("ChatServer.Models.Entities.Channel", "Channel")
                        .WithMany("Messages")
                        .HasForeignKey("ChannelId")
                        .HasConstraintName("FK__Message__channel__47DBAE45");

                    b.HasOne("ChatServer.Models.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Message__user_id__3B75D760");

                    b.Navigation("Channel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.Notification", b =>
                {
                    b.HasOne("ChatServer.Models.Entities.Message", "Message")
                        .WithMany("Notifications")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK__Notificat__messa__440B1D61");

                    b.HasOne("ChatServer.Models.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__user___44FF419A");

                    b.Navigation("Message");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.User", b =>
                {
                    b.HasOne("ChatServer.Models.Entities.FileUpload", "File")
                        .WithMany("Users")
                        .HasForeignKey("FileId")
                        .HasConstraintName("FK__Users__file_id__38996AB5");

                    b.Navigation("File");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.Channel", b =>
                {
                    b.Navigation("ChannelMemberships");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.FileUpload", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.Message", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ChatServer.Models.Entities.User", b =>
                {
                    b.Navigation("ChannelMemberships");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
